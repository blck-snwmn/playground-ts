name: Vitest

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      with:
        version: 8
        run_install: false
        
    - name: Install dependencies
      run: pnpm install
      working-directory: ./vitest-in-source-example
      
    - name: Run tests
      run: pnpm run test:run
      working-directory: ./vitest-in-source-example
      
    - name: Generate coverage report
      run: |
        pnpm run test:coverage > coverage-output.txt 2>&1 || true
        echo "## ðŸ“Š Test Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        grep -A 20 "Coverage report from" coverage-output.txt >> $GITHUB_STEP_SUMMARY || echo "Coverage data not found" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“ˆ **Coverage report generated successfully**" >> $GITHUB_STEP_SUMMARY
      working-directory: ./vitest-in-source-example 
